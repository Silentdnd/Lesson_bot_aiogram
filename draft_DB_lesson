# Конструкция\инструкция по подключению СУБД postgresql к интерпритатору пайчарм в целях возможности управления\создания\редактирования бд через интерпритатор
# https://www.youtube.com/watch?v=UZ7vCwbnn2c - ссылка на урок
# для начала необходимо установить саму субд postgresql и библиотеку psycopg2, НАПОМИНАНИЕ ярлыка POSTGRESQL несуществует - нужен ярлык pgAdmin 4 для запуска СУБД
# в конфиге прописываем след параметры
host = "127.0.0.1" ЭТО ЗНАЧЕНИЕ ХОСТА ПО УМОЛЧАНИЮ - ЕСЛИ ОН НАХОДИТСЯ НА ЛОКАЛЬНОЙ МАШИНЕ (НЕ РАЗМЕЩЕНН ГДЕ ТО (В ТАКОМ СЛУЧАЕ ЗНАЧЕНИЕ БУДЕТ ДРУГИМ!!!))
user = 'postgres' ЭТО ИМЯ ПОЛЬЗОВАТЕЛЯ В СУБД ПО УМОЛЧАНИЮ - ЕСЛИ ИЗМЕНИЛ ТАМ ТО ИЗМЕНИ И ТУТ НА АКТУАЛЬНОЕ!
password = "1234" ЭТО ТВОЙ АКТУАЛЬНЫЙ ПАРОЛЬ (ТЫ ДОЛЖЕН БЫТЬ В НЕМ УВЕРЕН!)
db_name = "test" ЭТО ИМЯ ТВОЕЙ ДАТАБАЗЫ КОТОРАЯ ДОЛЖНА СУЩЕСТВОВАТЬ!
#
# КОНСТРУКЦИЯ
# import psycopg2
# from config import host, user, password, db_name
#
#try: - ПОДКЛЮЧАЕМСЯ К БД ЭТА ЧАСТЬ КАК В АИОГРАММ ЗНАЧЕНИЕ РАВНО ЗНАЧЕНИЕ(ТО ЧТО ИМПОРТИРОВАЛИ ИЗ КОНФИГА)
#   connection = psycopg2.connect(
#       host=host,
#       user=user,
#       password=password,
#       database=db_name
#   )
#
#   connection.autocommit = True
#
#   with connection.cursor() as cursor: ЧТОБЫ НАЧАТЬ РАБОТАТЬ НАМ НУЖЕН ОБЪЕКТ CURSOR КОТОРЫЙ СОДЕРЖИТ РАЗЛИЧНЫЕ МЕТОДЫ ДЛЯ ВЫПОЛНЕНИЯ КОМАНД - СОЗДАЕМ ЧЕРЕЗ КОНТЕКСТНЫЙ МЕНЕДЖЕР WITH
#       cursor.execute(
#           "SELECT version();" ТУТ МЫ ХОТИМ ПОЛУЧИТЬ ВЕРСИЮ СЕРВЕРА
#       )
#
#       print(f"Server version: {cursor.fetchone()}")
#
#
#   with connection.cursor() as  cursor: ТУТ МЫ СОЗДАЕМ ТАБЛИЦУ С ТРЕМЯ СТОЛБЦАМИ
#       cursor.execute(
#           """CREATE TABLE users( #КОМАНДА НА СОЗДАНИЕ ТАБЛИЦЫ
#                id serial PRIMARY KEY, #  СТОЛБЕЦ С АЙДИШНИКОМ ПОМЕЧЕННЫЙ ЧТО ЭТО ПРИМАРИ_КЕЙ
#                first_name varchar(50) NOT NULL, # СТОЛБЕЦ С ПЕРВЫМ ИМЕНЕМ ОГРАНИЧЕНИЕМ ВАРЧАР(50) КОЛИЧЕСТВО СИМВОЛОВ И ТРЕБОВАНИЕМ НОТ НАЛЛ(НЕ ПУСТО)
#                nick_name varchar(50) NOT NULL);"""  # СТОЛБЕЦ С НИК НЕЙМОМ ОГРАНИЧЕНИЕМ ВАРЧАР(50) КОЛИЧЕСТВО СИМВОЛОВ И ТРЕБОВАНИЕМ НОТ НАЛЛ(НЕ ПУСТО)
#       )
#       print("[INFO] Table created successfully") ЧТО ВВЫВЕСТИ ЕСЛИ УДАЧНО
#
#
#except Exception as _ex: БЛОК ЭКСЕПТ ОБРАБАТЫВАЕТ ОШИБКИ
#    print("[INFO] Error while working with PostgreSQL", _ex)
#finally: ТУТ МЫ ЗАКРЫВАЕМ НАШЕ СОЕДИНЕНИЕ
#    if connection:
#        connection.close()
#        print("[INFO] PostgreSQL connection closed") ЭТО ОБРАБОТКА ЗАКРЫТИЯ СОЕДИНЕНИЯ В БЛОКЕ 'FINALLY'
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#